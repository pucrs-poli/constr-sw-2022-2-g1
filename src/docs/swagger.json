{
  "swagger": "2.0",
  "info": {
    "version": "1.0.0",
    "title": "Keycloak REST API",
    "description": "REST API that makes use of Keycloak to manage users."
  },
  "host": "localhost:3000",
  "basePath": "/",
  "schemes": ["http"],
  "consumes": ["application/json"],
  "produces": ["application/json"],
  "tags": [
    {
      "name": "Login",
      "description": "Login as an user."
    },
    {
      "name": "Users",
      "description": "Fetch/Create users."
    }
  ],
  "paths": {
    "/login": {
      "post": {
        "tags": ["Login"],
        "description": "Endpoint to login as an user.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/components/schemas/LoginRequestBody"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok.",
            "schema": {
              "$ref": "#/components/schemas/LoginResponseBody"
            }
          }
        }
      }
    },
    "/users": {
      "get": {
        "tags": ["Users"],
        "description": "Endpoint to fetch all users.",
        "parameters": [
          {
            "name": "Authorization",
            "description": "An admin access token.",
            "in": "header",
            "schema": {
              "$ref": "#/components/schemas/AccessToken"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok."
          },
          "401": {
            "description": "Unauthorized (Missing or Invalid Access Token)."
          }
        }
      },
      "post": {
        "tags": ["Users"],
        "description": "Endpoint to create an user.",
        "parameters": [
          {
            "name": "Authorization",
            "description": "An admin access token.",
            "in": "header",
            "schema": {
              "$ref": "#/components/schemas/AccessToken"
            }
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/components/schemas/CreateUserRequestBody"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created."
          },
          "401": {
            "description": "Unauthorized (Missing or Invalid Access Token)."
          }
        }
      }
    },
    "/users/{id}": {
      "get": {
        "tags": ["Users"],
        "description": "Endpoint to fetch an user by ID.",
        "parameters": [
          {
            "name": "Authorization",
            "description": "An admin access token.",
            "in": "header",
            "schema": {
              "$ref": "#/components/schemas/AccessToken"
            }
          },
          {
            "name": "id",
            "description": "An user ID.",
            "in": "path",
            "schema": {
              "$ref": "#/components/schemas/UserID"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok."
          },
          "401": {
            "description": "Unauthorized (Missing or Invalid Access Token)."
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "AccessToken": {
        "type": "string",
        "example": "Bearer <YOUR_TOKEN>"
      },
      "UserID": {
        "type": "string",
        "example": "5e2052a2-1030-440a-a623-9095613d5c73"
      },
      "LoginRequestBody": {
        "type": "object",
        "properties": {
          "client_id": {
            "type": "string",
            "example": "grupo1"
          },
          "username": {
            "type": "string",
            "example": "admin"
          },
          "password": {
            "type": "string",
            "example": "12345"
          },
          "grant_type": {
            "type": "string",
            "example": "password"
          }
        }
      },
      "LoginResponseBody": {
        "type": "object",
        "properties": {
          "token_type": {
            "type": "string",
            "example": "Bearer"
          },
          "access_token": {
            "type": "string",
            "example": "eyJhbGciOiJSUzI..."
          },
          "expires_in": {
            "type": "number",
            "example": 300
          },
          "refresh_token": {
            "type": "string",
            "example": "ey5TbGciOiJSUzK..."
          },
          "refresh_expires_in": {
            "type": "number",
            "example": 1800
          }
        }
      },
      "CreateUserRequestBody": {
        "type": "object",
        "properties": {
          "firstName": {
            "type": "string",
            "example": "George"
          },
          "lastName": {
            "type": "string",
            "example": "Tyson"
          },
          "email": {
            "type": "string",
            "example": "george.tyson@gmail.com"
          },
          "username": {
            "type": "string",
            "example": "TysonGeorge125"
          }
        }
      }
    }
  }
}

{
  "swagger": "2.0",
  "info": {
    "version": "1.0.0",
    "title": "Buildings and Classrooms API",
    "description": "REST API to manage buildings and classrooms."
  },
  "host": "localhost:8081",
  "basePath": "/",
  "schemes": [
    "http"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "tags": [
    {
      "name": "Buildings",
      "description": "Fetch/Create/Update buildings."
    },
    {
      "name": "Classrooms",
      "description": "Fetch/Create/Update classrooms."
    }
  ],
  "paths": {
    "/building": {
      "get": {
        "tags": [
          "Buildings"
        ],
        "description": "Endpoint to fetch all buildings.",
        "parameters": [
          {
            "name": "Authorization",
            "description": "An admin access token.",
            "in": "header",
            "schema": {
              "$ref": "#/components/schemas/AccessToken"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok."
          },
          "401": {
            "description": "Unauthorized (Not Logged In)."
          }
        }
      },
      "post": {
        "tags": [
          "Buildings"
        ],
        "description": "Endpoint to create a building.",
        "parameters": [
          {
            "name": "Authorization",
            "description": "An admin access token.",
            "in": "header",
            "schema": {
              "$ref": "#/components/schemas/AccessToken"
            }
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/components/schemas/BuildingRequestBody"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created.",
            "schema": {
              "$ref": "#/components/schemas/BuildingResponseBody"
            }
          },
          "400": {
            "description": "Bad Request."
          },
          "500": {
            "description": "Internal Server Error."
          }
        }
      }
    },
    "/building/{id}": {
      "get": {
        "tags": [
          "Buildings"
        ],
        "description": "Endpoint to fetch a building by ID.",
        "parameters": [
          {
            "name": "Authorization",
            "description": "An admin access token.",
            "in": "header",
            "schema": {
              "$ref": "#/components/schemas/AccessToken"
            }
          },
          {
            "name": "id",
            "description": "A building ID.",
            "in": "path",
            "schema": {
              "$ref": "#/components/schemas/MongoID"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok.",
            "schema": {
              "$ref": "#/components/schemas/BuildingResponseBody"
            }
          },
          "400": {
            "description": "Bad Request."
          },
          "401": {
            "description": "Unauthorized (Not Logged In)."
          },
          "404": {
            "description": "Buildings not found."
          }
        }
      },
      "put": {
        "tags": [
          "Buildings"
        ],
        "description": "Endpoint to update an building.",
        "parameters": [
          {
            "name": "Authorization",
            "description": "An admin access token.",
            "in": "header",
            "schema": {
              "$ref": "#/components/schemas/AccessToken"
            }
          },
          {
            "name": "id",
            "description": "A building ID.",
            "in": "path",
            "schema": {
              "$ref": "#/components/schemas/MongoID"
            }
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/components/schemas/BuildingRequestBody"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok.",
            "schema": {
              "$ref": "#/components/schemas/BuildingResponseBody"
            }
          },
          "400": {
            "description": "Bad Request."
          },
          "401": {
            "description": "Unauthorized (Not Logged In)."
          },
          "404": {
            "description": "Building not found."
          }
        }
      },
      "patch": {
        "tags": [
          "Buildings"
        ],
        "description": "Endpoint to update any attribute of a building.",
        "parameters": [
          {
            "name": "Authorization",
            "description": "An admin access token.",
            "in": "header",
            "schema": {
              "$ref": "#/components/schemas/AccessToken"
            }
          },
          {
            "name": "id",
            "description": "A building ID.",
            "in": "path",
            "schema": {
              "$ref": "#/components/schemas/MongoID"
            }
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "attribute": {
                  "type": "?",
                  "example": "attribute-value"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok.",
            "schema": {
              "$ref": "#/components/schemas/BuildingResponseBody"
            }
          },
          "400": {
            "description": "Bad Request."
          },
          "401": {
            "description": "Unauthorized (Not Logged In)."
          },
          "404": {
            "description": "Building not found."
          }
        }
      },
      "delete": {
        "tags": [
          "Buildings"
        ],
        "description": "Endpoint to delete a building.",
        "parameters": [
          {
            "name": "Authorization",
            "description": "An admin access token.",
            "in": "header",
            "schema": {
              "$ref": "#/components/schemas/AccessToken"
            }
          },
          {
            "name": "id",
            "description": "A building ID.",
            "in": "path",
            "schema": {
              "$ref": "#/components/schemas/MongoID"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok.",
            "schema": {
              "$ref": "#/components/schemas/BuildingResponseBody"
            }
          },
          "400": {
            "description": "Bad Request."
          },
          "401": {
            "description": "Unauthorized (Not Logged In)."
          },
          "404": {
            "description": "Building not found."
          }
        }
      }
    },
    "/classroom": {
      "get": {
        "tags": [
          "Classrooms"
        ],
        "description": "Endpoint to fetch all classrooms.",
        "parameters": [
          {
            "name": "Authorization",
            "description": "An admin access token.",
            "in": "header",
            "schema": {
              "$ref": "#/components/schemas/AccessToken"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok."
          },
          "401": {
            "description": "Unauthorized (Not Logged In)."
          }
        }
      },
      "post": {
        "tags": [
          "Classrooms"
        ],
        "description": "Endpoint to create a classroom.",
        "parameters": [
          {
            "name": "Authorization",
            "description": "An admin access token.",
            "in": "header",
            "schema": {
              "$ref": "#/components/schemas/AccessToken"
            }
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/components/schemas/ClassroomRequestBody"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created.",
            "schema": {
              "$ref": "#/components/schemas/ClassroomResponseBody"
            }
          },
          "400": {
            "description": "Bad Request."
          },
          "500": {
            "description": "Internal Server Error."
          }
        }
      }
    },
    "/classroom/{id}": {
      "get": {
        "tags": [
          "Classrooms"
        ],
        "description": "Endpoint to fetch a classroom by ID.",
        "parameters": [
          {
            "name": "Authorization",
            "description": "An admin access token.",
            "in": "header",
            "schema": {
              "$ref": "#/components/schemas/AccessToken"
            }
          },
          {
            "name": "id",
            "description": "A classroom ID.",
            "in": "path",
            "schema": {
              "$ref": "#/components/schemas/MongoID"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok.",
            "schema": {
              "$ref": "#/components/schemas/ClassroomResponseBody"
            }
          },
          "400": {
            "description": "Bad Request."
          },
          "401": {
            "description": "Unauthorized (Not Logged In)."
          },
          "404": {
            "description": "Classroom not found."
          }
        }
      },
      "put": {
        "tags": [
          "Classrooms"
        ],
        "description": "Endpoint to update a classroom.",
        "parameters": [
          {
            "name": "Authorization",
            "description": "An admin access token.",
            "in": "header",
            "schema": {
              "$ref": "#/components/schemas/AccessToken"
            }
          },
          {
            "name": "id",
            "description": "A classroom ID.",
            "in": "path",
            "schema": {
              "$ref": "#/components/schemas/MongoID"
            }
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/components/schemas/ClassroomRequestBody"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok.",
            "schema": {
              "$ref": "#/components/schemas/ClassroomResponseBody"
            }
          },
          "400": {
            "description": "Bad Request."
          },
          "401": {
            "description": "Unauthorized (Not Logged In)."
          },
          "404": {
            "description": "Classroom not found."
          }
        }
      },
      "patch": {
        "tags": [
          "Classrooms"
        ],
        "description": "Endpoint to update any attribute of a classroom.",
        "parameters": [
          {
            "name": "Authorization",
            "description": "An admin access token.",
            "in": "header",
            "schema": {
              "$ref": "#/components/schemas/AccessToken"
            }
          },
          {
            "name": "id",
            "description": "A classroom ID.",
            "in": "path",
            "schema": {
              "$ref": "#/components/schemas/MongoID"
            }
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "attribute": {
                  "type": "?",
                  "example": "attribute-value"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok.",
            "schema": {
              "$ref": "#/components/schemas/ClassroomResponseBody"
            }
          },
          "400": {
            "description": "Bad Request."
          },
          "401": {
            "description": "Unauthorized (Not Logged In)."
          },
          "404": {
            "description": "Classroom not found."
          }
        }
      },
      "delete": {
        "tags": [
          "Classrooms"
        ],
        "description": "Endpoint to delete a classroom.",
        "parameters": [
          {
            "name": "Authorization",
            "description": "An admin access token.",
            "in": "header",
            "schema": {
              "$ref": "#/components/schemas/AccessToken"
            }
          },
          {
            "name": "id",
            "description": "A classroom ID.",
            "in": "path",
            "schema": {
              "$ref": "#/components/schemas/MongoID"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok.",
            "schema": {
              "$ref": "#/components/schemas/ClassroomResponseBody"
            }
          },
          "400": {
            "description": "Bad Request."
          },
          "401": {
            "description": "Unauthorized (Not Logged In)."
          },
          "404": {
            "description": "Classroom not found."
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "AccessToken": {
        "type": "string",
        "example": "Bearer <YOUR_TOKEN>"
      },
      "MongoID": {
        "type": "string",
        "example": "5e2052a21030440aa6239095613d5c73"
      },
      "BuildingRequestBody": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "Prédio 32"
          },
          "number": {
            "type": "number",
            "example": 32
          },
          "address": {
            "type": "object",
            "properties": {
              "street": {
                "type": "string",
                "example": "Av. Ipiranga"
              },
              "number": {
                "type": "number",
                "example": 6681
              },
              "complement": {
                "type": "string",
                "example": "Prédio 32"
              },
              "neighborhood": {
                "type": "string",
                "example": "Partenon"
              },
              "city": {
                "type": "string",
                "example": "Porto Alegre"
              },
              "state": {
                "type": "string",
                "example": "RS"
              },
              "zipCode": {
                "type": "string",
                "example": "90619-900"
              }
            }
          }
        }
      },
      "BuildingResponseBody": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "example": "87dy3t76dgt736"
          },
          "name": {
            "type": "string",
            "example": "Prédio 32"
          },
          "number": {
            "type": "number",
            "example": 32
          },
          "address": {
            "type": "object",
            "properties": {
              "street": {
                "type": "string",
                "example": "Av. Ipiranga"
              },
              "number": {
                "type": "number",
                "example": 6681
              },
              "complement": {
                "type": "string",
                "example": "Prédio 32"
              },
              "neighborhood": {
                "type": "string",
                "example": "Partenon"
              },
              "city": {
                "type": "string",
                "example": "Porto Alegre"
              },
              "state": {
                "type": "string",
                "example": "RS"
              },
              "zipCode": {
                "type": "string",
                "example": "90619-900"
              }
            }
          },
          "classrooms": {
            "type": "string",
            "example": "[]"
          },
          "__v": {
            "type": "string",
            "example": "87dy3t76dgt736"
          }
        }
      },
      "ClassroomRequestBody": {
        "type": "object",
        "properties": {
          "number": {
            "type": "number",
            "example": 203
          },
          "capacity": {
            "type": "number",
            "example": 60
          },
          "floor": {
            "type": "number",
            "example": 2
          },
          "resource": {
            "type": "string",
            "example": "projetor"
          },
          "building": {
            "type": "string",
            "example": "87dy3t76dgt736"
          }
        }
      },
      "ClassroomResponseBody": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "example": "87dy3t76dgt736"
          },
          "number": {
            "type": "number",
            "example": 203
          },
          "capacity": {
            "type": "number",
            "example": 60
          },
          "floor": {
            "type": "number",
            "example": 2
          },
          "resource": {
            "type": "string",
            "example": "projetor"
          },
          "building": {
            "type": "string",
            "example": "87dy3t76dgt736"
          },
          "__v": {
            "type": "string",
            "example": "87dy3t76dgt736"
          }
        }
      }
    }
  }
}